#+title: Graph theory
#+roam_tags: graph theory

#+call: init()

#+begin_src jupyter-python :lib yes
import collections
import numpy as np
from networkx import nx
import matplotlib.pyplot as plt
import numba
#+end_src

#+begin_src jupyter-python :noweb yes :lib yes
def get_degree_count(degrees):
    degree_sequence = np.flip(np.sort(degrees))
    degree_count = collections.Counter(degree_sequence)
    return np.array(list(zip(*degree_count.items())))

def draw_dense_graph(G, pos, alpha=0.1, width=0.2, node_size=4):
    nx.draw_networkx_nodes(G, pos=pos, node_size=node_size, node_color=<<color("green")>>)
    nx.draw_networkx_edges(G, pos=pos, width=width, alpha=alpha, edge_color=<<color("brightblack4")>>)

def draw_graph(G, pos, alpha=0.8, width=0.8, node_size=8):
    nx.draw_networkx_nodes(G, pos=pos, node_size=node_size, node_color=<<color("green")>>)
    nx.draw_networkx_edges(G, pos=pos, width=width, alpha=alpha, edge_color=<<color("brightblack4")>>)

def degree_hist(G):
    dist = [d for n, d in G.degree()]
    plt.hist(dist, bins=2000, density=True, rwidth=1, width=1.1)
#+end_src

* Graph theory
Graph theory studies a mathematical object known as /graphs/, it is a general
framework for describing relations between objects. The representation of the
relations are in the form of /edges/ and the objects is the /nodes/.

** TODO Representations
A representation of a graph can take multiple forms. The most common
representation is a set of node pairs.

1. Node tuples
2. Adjacency matrix
3. Edge

** COMMENT Graph diameter
#+begin_src python
def maximum_path_length(A):
    return np.max([path_length(A, i) for i in range(len(A))])
#+end_src

#+begin_src python :results verbatim
from networkx import nx
import graphs
import numpy as np
import time

with open('smallWorldExample.txt') as f:
    A = graphs.from_string(f.readlines())

graphs.path_length(A, 0)
start = time.time()
diam = graphs.maximum_path_length(A)
end = time.time()

return f"Diameter: {diam:.5f}, Time: {int((end-start)*1000)} ms"
#+end_src

#+RESULTS[ffea4ff9c09b856ec8cd380b2d207313593b4576]:
: Diameter: 5.00000, Time: 2 ms
